/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.tables.records;


import edu.java.scrapper.domain.jooq.tables.TrackInfo;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TrackInfoRecord extends UpdatableRecordImpl<TrackInfoRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TRACK_INFO.LINK_ID</code>.
     */
    public void setLinkId(@NotNull Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TRACK_INFO.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getLinkId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TRACK_INFO.TG_CHAT</code>.
     */
    public void setTgChat(@NotNull Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>TRACK_INFO.TG_CHAT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getTgChat() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Integer> field1() {
        return TrackInfo.TRACK_INFO.LINK_ID;
    }

    @Override
    @NotNull
    public Field<Integer> field2() {
        return TrackInfo.TRACK_INFO.TG_CHAT;
    }

    @Override
    @NotNull
    public Integer component1() {
        return getLinkId();
    }

    @Override
    @NotNull
    public Integer component2() {
        return getTgChat();
    }

    @Override
    @NotNull
    public Integer value1() {
        return getLinkId();
    }

    @Override
    @NotNull
    public Integer value2() {
        return getTgChat();
    }

    @Override
    @NotNull
    public TrackInfoRecord value1(@NotNull Integer value) {
        setLinkId(value);
        return this;
    }

    @Override
    @NotNull
    public TrackInfoRecord value2(@NotNull Integer value) {
        setTgChat(value);
        return this;
    }

    @Override
    @NotNull
    public TrackInfoRecord values(@NotNull Integer value1, @NotNull Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TrackInfoRecord
     */
    public TrackInfoRecord() {
        super(TrackInfo.TRACK_INFO);
    }

    /**
     * Create a detached, initialised TrackInfoRecord
     */
    @ConstructorProperties({ "linkId", "tgChat" })
    public TrackInfoRecord(@NotNull Integer linkId, @NotNull Integer tgChat) {
        super(TrackInfo.TRACK_INFO);

        setLinkId(linkId);
        setTgChat(tgChat);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TrackInfoRecord
     */
    public TrackInfoRecord(edu.java.scrapper.domain.jooq.tables.pojos.TrackInfo value) {
        super(TrackInfo.TRACK_INFO);

        if (value != null) {
            setLinkId(value.getLinkId());
            setTgChat(value.getTgChat());
            resetChangedOnNotNull();
        }
    }
}
